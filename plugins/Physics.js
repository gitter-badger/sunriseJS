!function(a){var b=a.$rootScope,c=b.$scope.fn;utilfn=b.$scope.util,c.Physics=function(){return Physics=function(a){c.Component.call(this),this.data={};var b=this,d=this.data.speed=new utilfn.Vec2(0,0),e={},f=1/30,g=void 0===a.mass?1:a.mass,h=this.data.imass=0===g?0:1/g;inertia=void 0===a.inertia?.99:a.inertia,restitution=this.data.restitution=1e-4,a.forces=a.forces||[];for(key in a.forces)e[key]=new utilfn.Vec2(a.forces[key].x,a.forces[key].y);this.on("tick",function(a){for(key in e)d.add(utilfn.Vec2.multiply(utilfn.Vec2.divide(e[key],g),a.delta*f));d.multiply(inertia),b.entity.x+=d.x*a.delta*f,b.entity.y+=d.y*a.delta*f}),this.on("setForce",function(a){e[a.name]=new utilfn.Vec2(a.x,a.y)}),this.on("collision",function(a){var c=a.other.getComponentData("Physics","speed"),e=a.other.getComponentData("Physics","restitution"),f=a.other.getComponentData("Physics","imass"),g=new utilfn.Vec2(a.collision.normal.x,a.collision.normal.y);if(c&&e&&f){var i=utilfn.Vec2.sub(c,d),j=utilfn.Vec2.dot(i,g);if(!(j>0)){var k=Math.min(restitution,e),l=-(1+k)*j/(h+f),m=utilfn.Vec2.multiply(g,l);if(d.sub(utilfn.Vec2.multiply(m,h)),c.add(utilfn.Vec2.multiply(m,f)),a.collision.penetration>1){var n=a.collision.penetration/(h+f);n*=.8,b.entity.x-=h*n*g.x,b.entity.y-=h*n*g.y,a.other.x+=f*n*g.x,a.other.y+=f*n*g.y}}}})},c.Component.extend(Physics),Physics}(),c.components.add("Physics",function(a){return new c.Physics(a)})}($sr=window.$sr=window.$sr||{});
//# sourceMappingURL=../Physics.js.map